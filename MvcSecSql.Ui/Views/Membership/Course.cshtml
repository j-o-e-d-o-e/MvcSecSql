@model CourseViewModel

@{
    ViewData["Title"] = "Course";
}

<div class="membership top-margin course-content">
    <div class="row navigation-bar">
        <div class="col-sm-12">
            <a class="btn btn-primary" href="~/Membership/Dashboard">
                <span class="glyphicon glyphicon-menu-left"></span>
                Back to Dashboard
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="panel">
                <div class="marquee" style="background-image:
                url('@Model.Course.MarqueeImageUrl');">
                    <img src="@Model.Course.CourseImageUrl"
                         class="cover-image">
                </div>
                <div class="panel-body">
                    <h1>@Model.Course.CourseTitle</h1>
                    <h4 class="product-desc">
                        @Model.Course.CourseDescription
                    </h4>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-9">
            @foreach (var module in Model.Modules)
            {
                <div class="panel module">
                    <div class="panel-body">
                        <h5>@module.ModuleTitle</h5>
                    </div>

                    @if (module.Videos != null)
                    {
                        @await Html.PartialAsync("_ModuleVideosPartial", module.Videos)
                    }

                    @if (module.Downloads != null)
                    {
                        <hr class="no-margin">
                        <div class="panel-body download-panel">
                            <h5>Downloads</h5>
                            @await Html.PartialAsync("_ModuleDownloadsPartial", module.Downloads)
                        </div>
                    }
                </div>
            }
        </div>
        <div class="col-sm-3">
            @if (Model.Instructor != null)
            {
                @await Html.PartialAsync("_InstructorBioPartial", Model.Instructor)
            }
        </div>
    </div>
</div>


