@page
@using Microsoft.AspNetCore.Identity
@using MvcSecSql.Data.Data.Entities
@inject SignInManager<User> SignInManager
@model EditModel
@{
    ViewData["Title"] = "Edit User";
}
@if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
<div class="row">
    <div class="col-md-4 col-md-offset-4">
        <h2>@ViewData["Title"]</h2>
        <page-button path="Users/Index" Bootstrap-style="primary" glyph="info-sign" description="Back to List"></page-button>
        <page-button path="Index" Bootstrap-style="warning" glyph="list-alt" description="Dashboard"></page-button>
        <p></p>
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <input type="hidden" asp-for="Input.Id" />
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.IsAdmin"></label>
                <input asp-for="Input.IsAdmin" class="form-control" />
                <span asp-validation-for="Input.IsAdmin" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-success">Save</button>
        </form>
    </div>
</div>
}

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
